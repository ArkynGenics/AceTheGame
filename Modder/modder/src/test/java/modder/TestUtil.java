/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package modder;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;

class TestUtil {
    @Test
    void DoesCommandExist() {
        // commands that should exit on windows and unix like OS
        assertEquals(true, Util.DoesCommandExist("ping"));
        assertEquals(true, Util.DoesCommandExist("echo"));
        // some random command that will never exist
        assertEquals(false, Util.DoesCommandExist("wioiofj902jnci43b199u"));
        assertEquals(false, Util.DoesCommandExist("u3902u9hbrnodooej2hwioehfwejof"));
        assertEquals(false, Util.DoesCommandExist("3490t433ocworo3i40ehfh"));
        assertEquals(false, Util.DoesCommandExist("93u09u904utoidwwht4j39"));
    }

    @Test
    void ArrayConcat() {

        assertArrayEquals(

                new String[] { "hello", "world" },

                Util.ArrayConcat(new String[] { "hello" }, new String[] { "world" }));

        assertArrayEquals(

                new String[] { "hello", "world", "goodbye" },

                Util.ArrayConcat(new String[] { "hello", "world" }, new String[] { "goodbye" }));

        assertArrayEquals(

                new String[] { "hello", "world", "goodbye", "nice", "good" },

                Util.ArrayConcat(new String[] { "hello", "world" }, new String[] { "goodbye", "nice", "good" }));

        // when empty
        assertArrayEquals(

                new String[] {},

                Util.ArrayConcat(new String[] {}, new String[] {}));

        assertArrayEquals(

                new Integer[] {},

                Util.ArrayConcat(new Integer[] {}, new Integer[] {}));
        // when NULL

        assertArrayEquals(

                null,

                Util.ArrayConcat(null, null));

    }

    @Test
    void RunCommand() {
        List<String> output = new ArrayList<String>();

        // test RunCommand on echo command, because it is one of command
        // which ouput can be controlled
        output = Util.RunCommand("echo", "hello");
        assertIterableEquals(Arrays.asList("hello"), output);

        output = Util.RunCommand("echo", "hello world");
        assertIterableEquals(Arrays.asList("hello world"), output);

        output = Util.RunCommand("echo", "hello and goodbye world");
        assertIterableEquals(Arrays.asList("hello and goodbye world"), output);

        output = Util.RunCommand("echo", "hello\nworld");
        assertIterableEquals(Arrays.asList("hello", "world"), output);

        output = Util.RunCommand("echo", "hello\nworld\nbye");
        assertIterableEquals(Arrays.asList("hello", "world", "bye"), output);

    }
}
