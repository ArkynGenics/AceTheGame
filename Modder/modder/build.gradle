/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.9.10'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    //
    implementation 'net.lingala.zip4j:zip4j:2.11.3'
    // auto signer
    // https://stackoverflow.com/a/20956456/14073678
    implementation files("./lib/uber-apk-signer-1.3.0.jar")
    implementation files("./lib/apktool-cli-all_2.8.1.jar")
    // libs for io operations
    // https://stackoverflow.com/a/23678498/14073678
    // installation:
    // https://stackoverflow.com/a/31496709/14073678
    implementation 'commons-io:commons-io:2.13.0'
    // for easy os detection
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // cli
    implementation 'info.picocli:picocli:4.7.5'
    // logging
    implementation 'ch.qos.logback:logback-classic:1.4.11'
    implementation 'io.github.oshai:kotlin-logging-jvm:5.0.0'


}

application {
    // Define the main class for the application.
    mainClass = 'modder.Main'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
kotlin {
    jvmToolchain(17)
}
